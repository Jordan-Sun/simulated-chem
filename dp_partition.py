import time
from typing import List, Tuple

def minimize_difference(elements: List[Tuple[int, float]]) -> Tuple[List[int], List[int], float]:
    # Initialize DP table: dp[s][k] = True if sum s is achievable with k elements
    N = len(elements) // 2
    total_sum = sum(value for _, value in elements)
    target = total_sum // 2
    # dp[k] is a set of sums achievable with k elements
    dp = [set() for _ in range(N+1)]
    # backtrace[k][s] = element that led to sum
    backtrace = [{} for _ in range(N+1)]
    # Base case: sum 0 achievable with 0 elements
    dp[0].add(0)

    for element in elements:
        for k in range(N, 0, -1):
            for s in dp[k-1]:
                new_sum = s + element[1]
                if new_sum > target:
                    break   # No need to consider larger sums
                if new_sum in dp[k]:
                    continue # Already found a subset summing to new_sum
                dp[k].add(new_sum)
                backtrace[k][new_sum] = element

    # Find the largest sum s achievable with N elements
    best_sum = max(dp[N])
    # Compute the minimum difference
    min_diff = total_sum - 2*best_sum
    # Reconstruct the subset summing to best_sum
    set_A = []
    for k in range(N, 0, -1):
        element = backtrace[k][best_sum]
        set_A.append(element)
        best_sum -= element[1]

    # The other set is the elements not in set_A
    set_B = [a for a in elements if a not in set_A]

    return set_A, set_B, min_diff

elements = [
    (3168, 211), (3169, 229), (3170, 212), (3171, 214), (3172, 194), (3173, 164), (3174, 139), (3175, 168), (3176, 114), (3177, 107), (3178, 64), (3179, 120), (3192, 185), (3193, 237), (3194, 214), (3195, 196), (3196, 234), (3197, 173), (3198, 130), (3199, 103), (3200, 92), (3201, 127), (3202, 83), (3203, 63), (3216, 190), (3217, 237), (3218, 204), (3219, 185), (3220, 205), (3221, 175), (3222, 160), (3223, 152), (3224, 140), (3225, 78), (3226, 93), (3227, 70), (3240, 199), (3241, 224), (3242, 230), (3243, 222), (3244, 239), (3245, 195), (3246, 154), (3247, 97), (3248, 82), (3249, 141), (3250, 103), (3251, 84), (3264, 210), (3265, 249), (3266, 248), (3267, 272), (3268, 256), (3269, 203), (3270, 131), (3271, 115), (3272, 72), (3273, 90), (3274, 94), (3275, 128), (3288, 200), (3289, 175), (3290, 187), (3291, 219), (3292, 195), (3293, 185), (3294, 153), (3295, 119), (3296, 104), (3297, 83), (3298, 95), (3299, 124), (3312, 246), (3313, 197), (3314, 205), (3315, 157), (3316, 188), (3317, 193), (3318, 150), (3319, 88), (3320, 130), (3321, 104), (3322, 114), (3323, 127), (3336, 145), (3337, 224), (3338, 242), (3339, 159), (3340, 148), (3341, 126), (3342, 83), (3343, 94), (3344, 106), (3345, 144), (3346, 151), (3347, 164), (3360, 229), (3361, 271), (3362, 242), (3363, 227), (3364, 137), (3365, 113), (3366, 105), (3367, 126), (3368, 158), (3369, 206), (3370, 226), (3371, 153), (3384, 277), (3385, 285), (3386, 267), (3387, 197), (3388, 157), (3389, 156), (3390, 199), (3391, 159), (3392, 169), (3393, 250), (3394, 264), (3395, 217), (3408, 308), (3409, 273), (3410, 232), (3411, 195), (3412, 204), (3413, 187), (3414, 181), (3415, 182), (3416, 166), (3417, 249), (3418, 271), (3419, 241), (3432, 298), (3433, 303), (3434, 285), (3435, 209), (3436, 238), (3437, 226), (3438, 204), (3439, 221), (3440, 193), (3441, 209), (3442, 222), (3443, 246), (588, 233), (589, 204), (590, 211), (591, 252), (592, 255), (593, 453), (594, 814), (595, 811), (596, 692), (597, 613), (598, 453), (599, 377), (612, 218), (613, 243), (614, 259), (615, 251), (616, 274), (617, 694), (618, 866), (619, 740), (620, 632), (621, 508), (622, 406), (623, 366), (636, 271), (637, 289), (638, 260), (639, 239), (640, 426), (641, 777), (642, 828), (643, 664), (644, 525), (645, 453), (646, 411), (647, 340), (660, 250), (661, 239), (662, 200), (663, 245), (664, 684), (665, 819), (666, 780), (667, 603), (668, 493), (669, 406), (670, 333), (671, 226), (684, 214), (685, 194), (686, 196), (687, 330), (688, 779), (689, 834), (690, 739), (691, 522), (692, 476), (693, 402), (694, 313), (695, 200), (708, 238), (709, 280), (710, 255), (711, 668), (712, 838), (713, 787), (714, 679), (715, 525), (716, 492), (717, 406), (718, 305), (719, 254), (732, 287), (733, 309), (734, 384), (735, 832), (736, 824), (737, 740), (738, 619), (739, 468), (740, 383), (741, 352), (742, 289), (743, 256), (756, 280), (757, 254), (758, 576), (759, 854), (760, 791), (761, 699), (762, 561), (763, 405), (764, 364), (765, 320), (766, 290), (767, 303), (780, 314), (781, 289), (782, 797), (783, 831), (784, 752), (785, 640), (786, 516), (787, 410), (788, 405), (789, 393), (790, 352), (791, 345), (804, 276), (805, 427), (806, 908), (807, 810), (808, 730), (809, 581), (810, 497), (811, 397), (812, 361), (813, 404), (814, 389), (815, 392), (828, 259), (829, 619), (830, 887), (831, 780), (832, 709), (833, 588), (834, 452), (835, 376), (836, 331), (837, 409), (838, 390), (839, 417), (852, 292), (853, 694), (854, 805), (855, 683), (856, 634), (857, 507), (858, 451), (859, 385), (860, 301), (861, 311), (862, 334), (863, 354)
    ]
# Time the function
start_time = time.time()
set_A, set_B, min_diff = minimize_difference(elements)
end_time = time.time()
# compute the sum of set A and set B
print("Set")
print("Set A: {}, Set B: {}, Min diff: {}".format(sum([value for _, value in set_A]), sum([value for _, value in set_B]), min_diff))
print("Time:", end_time - start_time)
